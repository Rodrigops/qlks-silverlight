//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.235
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 4.0.50826.0
// 
namespace QuanLyKhachSan.Nguoi_PhongSVC {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Nguoi_PhongInfo", Namespace="http://schemas.datacontract.org/2004/07/QuanLyKhachSan")]
    public partial class Nguoi_PhongInfo : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string CongThemField;
        
        private decimal GiaTienField;
        
        private string ImageUrlField;
        
        private string NguoiPhongNameField;
        
        private int Nguoi_PhongIDField;
        
        private int PhanTramField;
        
        private int PhongIDField;
        
        private string statusField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CongThem {
            get {
                return this.CongThemField;
            }
            set {
                if ((object.ReferenceEquals(this.CongThemField, value) != true)) {
                    this.CongThemField = value;
                    this.RaisePropertyChanged("CongThem");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal GiaTien {
            get {
                return this.GiaTienField;
            }
            set {
                if ((this.GiaTienField.Equals(value) != true)) {
                    this.GiaTienField = value;
                    this.RaisePropertyChanged("GiaTien");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ImageUrl {
            get {
                return this.ImageUrlField;
            }
            set {
                if ((object.ReferenceEquals(this.ImageUrlField, value) != true)) {
                    this.ImageUrlField = value;
                    this.RaisePropertyChanged("ImageUrl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NguoiPhongName {
            get {
                return this.NguoiPhongNameField;
            }
            set {
                if ((object.ReferenceEquals(this.NguoiPhongNameField, value) != true)) {
                    this.NguoiPhongNameField = value;
                    this.RaisePropertyChanged("NguoiPhongName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Nguoi_PhongID {
            get {
                return this.Nguoi_PhongIDField;
            }
            set {
                if ((this.Nguoi_PhongIDField.Equals(value) != true)) {
                    this.Nguoi_PhongIDField = value;
                    this.RaisePropertyChanged("Nguoi_PhongID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PhanTram {
            get {
                return this.PhanTramField;
            }
            set {
                if ((this.PhanTramField.Equals(value) != true)) {
                    this.PhanTramField = value;
                    this.RaisePropertyChanged("PhanTram");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PhongID {
            get {
                return this.PhongIDField;
            }
            set {
                if ((this.PhongIDField.Equals(value) != true)) {
                    this.PhongIDField = value;
                    this.RaisePropertyChanged("PhongID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string status {
            get {
                return this.statusField;
            }
            set {
                if ((object.ReferenceEquals(this.statusField, value) != true)) {
                    this.statusField = value;
                    this.RaisePropertyChanged("status");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="", ConfigurationName="Nguoi_PhongSVC.Nguoi_PhongSVC")]
    public interface Nguoi_PhongSVC {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:Nguoi_PhongSVC/Nguoi_Phong_Add", ReplyAction="urn:Nguoi_PhongSVC/Nguoi_Phong_AddResponse")]
        System.IAsyncResult BeginNguoi_Phong_Add(string ListPhongID, string ListNguoiPhongName, string ListCongThem, string CongThemTiepTheo, System.AsyncCallback callback, object asyncState);
        
        void EndNguoi_Phong_Add(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:Nguoi_PhongSVC/Nguoi_Phong_GetItemByPhongID", ReplyAction="urn:Nguoi_PhongSVC/Nguoi_Phong_GetItemByPhongIDResponse")]
        System.IAsyncResult BeginNguoi_Phong_GetItemByPhongID(int PhongID, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<QuanLyKhachSan.Nguoi_PhongSVC.Nguoi_PhongInfo> EndNguoi_Phong_GetItemByPhongID(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface Nguoi_PhongSVCChannel : QuanLyKhachSan.Nguoi_PhongSVC.Nguoi_PhongSVC, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Nguoi_Phong_GetItemByPhongIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public Nguoi_Phong_GetItemByPhongIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<QuanLyKhachSan.Nguoi_PhongSVC.Nguoi_PhongInfo> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<QuanLyKhachSan.Nguoi_PhongSVC.Nguoi_PhongInfo>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Nguoi_PhongSVCClient : System.ServiceModel.ClientBase<QuanLyKhachSan.Nguoi_PhongSVC.Nguoi_PhongSVC>, QuanLyKhachSan.Nguoi_PhongSVC.Nguoi_PhongSVC {
        
        private BeginOperationDelegate onBeginNguoi_Phong_AddDelegate;
        
        private EndOperationDelegate onEndNguoi_Phong_AddDelegate;
        
        private System.Threading.SendOrPostCallback onNguoi_Phong_AddCompletedDelegate;
        
        private BeginOperationDelegate onBeginNguoi_Phong_GetItemByPhongIDDelegate;
        
        private EndOperationDelegate onEndNguoi_Phong_GetItemByPhongIDDelegate;
        
        private System.Threading.SendOrPostCallback onNguoi_Phong_GetItemByPhongIDCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public Nguoi_PhongSVCClient() {
        }
        
        public Nguoi_PhongSVCClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Nguoi_PhongSVCClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Nguoi_PhongSVCClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Nguoi_PhongSVCClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> Nguoi_Phong_AddCompleted;
        
        public event System.EventHandler<Nguoi_Phong_GetItemByPhongIDCompletedEventArgs> Nguoi_Phong_GetItemByPhongIDCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult QuanLyKhachSan.Nguoi_PhongSVC.Nguoi_PhongSVC.BeginNguoi_Phong_Add(string ListPhongID, string ListNguoiPhongName, string ListCongThem, string CongThemTiepTheo, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginNguoi_Phong_Add(ListPhongID, ListNguoiPhongName, ListCongThem, CongThemTiepTheo, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void QuanLyKhachSan.Nguoi_PhongSVC.Nguoi_PhongSVC.EndNguoi_Phong_Add(System.IAsyncResult result) {
            base.Channel.EndNguoi_Phong_Add(result);
        }
        
        private System.IAsyncResult OnBeginNguoi_Phong_Add(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string ListPhongID = ((string)(inValues[0]));
            string ListNguoiPhongName = ((string)(inValues[1]));
            string ListCongThem = ((string)(inValues[2]));
            string CongThemTiepTheo = ((string)(inValues[3]));
            return ((QuanLyKhachSan.Nguoi_PhongSVC.Nguoi_PhongSVC)(this)).BeginNguoi_Phong_Add(ListPhongID, ListNguoiPhongName, ListCongThem, CongThemTiepTheo, callback, asyncState);
        }
        
        private object[] OnEndNguoi_Phong_Add(System.IAsyncResult result) {
            ((QuanLyKhachSan.Nguoi_PhongSVC.Nguoi_PhongSVC)(this)).EndNguoi_Phong_Add(result);
            return null;
        }
        
        private void OnNguoi_Phong_AddCompleted(object state) {
            if ((this.Nguoi_Phong_AddCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.Nguoi_Phong_AddCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void Nguoi_Phong_AddAsync(string ListPhongID, string ListNguoiPhongName, string ListCongThem, string CongThemTiepTheo) {
            this.Nguoi_Phong_AddAsync(ListPhongID, ListNguoiPhongName, ListCongThem, CongThemTiepTheo, null);
        }
        
        public void Nguoi_Phong_AddAsync(string ListPhongID, string ListNguoiPhongName, string ListCongThem, string CongThemTiepTheo, object userState) {
            if ((this.onBeginNguoi_Phong_AddDelegate == null)) {
                this.onBeginNguoi_Phong_AddDelegate = new BeginOperationDelegate(this.OnBeginNguoi_Phong_Add);
            }
            if ((this.onEndNguoi_Phong_AddDelegate == null)) {
                this.onEndNguoi_Phong_AddDelegate = new EndOperationDelegate(this.OnEndNguoi_Phong_Add);
            }
            if ((this.onNguoi_Phong_AddCompletedDelegate == null)) {
                this.onNguoi_Phong_AddCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnNguoi_Phong_AddCompleted);
            }
            base.InvokeAsync(this.onBeginNguoi_Phong_AddDelegate, new object[] {
                        ListPhongID,
                        ListNguoiPhongName,
                        ListCongThem,
                        CongThemTiepTheo}, this.onEndNguoi_Phong_AddDelegate, this.onNguoi_Phong_AddCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult QuanLyKhachSan.Nguoi_PhongSVC.Nguoi_PhongSVC.BeginNguoi_Phong_GetItemByPhongID(int PhongID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginNguoi_Phong_GetItemByPhongID(PhongID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.Generic.List<QuanLyKhachSan.Nguoi_PhongSVC.Nguoi_PhongInfo> QuanLyKhachSan.Nguoi_PhongSVC.Nguoi_PhongSVC.EndNguoi_Phong_GetItemByPhongID(System.IAsyncResult result) {
            return base.Channel.EndNguoi_Phong_GetItemByPhongID(result);
        }
        
        private System.IAsyncResult OnBeginNguoi_Phong_GetItemByPhongID(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int PhongID = ((int)(inValues[0]));
            return ((QuanLyKhachSan.Nguoi_PhongSVC.Nguoi_PhongSVC)(this)).BeginNguoi_Phong_GetItemByPhongID(PhongID, callback, asyncState);
        }
        
        private object[] OnEndNguoi_Phong_GetItemByPhongID(System.IAsyncResult result) {
            System.Collections.Generic.List<QuanLyKhachSan.Nguoi_PhongSVC.Nguoi_PhongInfo> retVal = ((QuanLyKhachSan.Nguoi_PhongSVC.Nguoi_PhongSVC)(this)).EndNguoi_Phong_GetItemByPhongID(result);
            return new object[] {
                    retVal};
        }
        
        private void OnNguoi_Phong_GetItemByPhongIDCompleted(object state) {
            if ((this.Nguoi_Phong_GetItemByPhongIDCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.Nguoi_Phong_GetItemByPhongIDCompleted(this, new Nguoi_Phong_GetItemByPhongIDCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void Nguoi_Phong_GetItemByPhongIDAsync(int PhongID) {
            this.Nguoi_Phong_GetItemByPhongIDAsync(PhongID, null);
        }
        
        public void Nguoi_Phong_GetItemByPhongIDAsync(int PhongID, object userState) {
            if ((this.onBeginNguoi_Phong_GetItemByPhongIDDelegate == null)) {
                this.onBeginNguoi_Phong_GetItemByPhongIDDelegate = new BeginOperationDelegate(this.OnBeginNguoi_Phong_GetItemByPhongID);
            }
            if ((this.onEndNguoi_Phong_GetItemByPhongIDDelegate == null)) {
                this.onEndNguoi_Phong_GetItemByPhongIDDelegate = new EndOperationDelegate(this.OnEndNguoi_Phong_GetItemByPhongID);
            }
            if ((this.onNguoi_Phong_GetItemByPhongIDCompletedDelegate == null)) {
                this.onNguoi_Phong_GetItemByPhongIDCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnNguoi_Phong_GetItemByPhongIDCompleted);
            }
            base.InvokeAsync(this.onBeginNguoi_Phong_GetItemByPhongIDDelegate, new object[] {
                        PhongID}, this.onEndNguoi_Phong_GetItemByPhongIDDelegate, this.onNguoi_Phong_GetItemByPhongIDCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override QuanLyKhachSan.Nguoi_PhongSVC.Nguoi_PhongSVC CreateChannel() {
            return new Nguoi_PhongSVCClientChannel(this);
        }
        
        private class Nguoi_PhongSVCClientChannel : ChannelBase<QuanLyKhachSan.Nguoi_PhongSVC.Nguoi_PhongSVC>, QuanLyKhachSan.Nguoi_PhongSVC.Nguoi_PhongSVC {
            
            public Nguoi_PhongSVCClientChannel(System.ServiceModel.ClientBase<QuanLyKhachSan.Nguoi_PhongSVC.Nguoi_PhongSVC> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginNguoi_Phong_Add(string ListPhongID, string ListNguoiPhongName, string ListCongThem, string CongThemTiepTheo, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[4];
                _args[0] = ListPhongID;
                _args[1] = ListNguoiPhongName;
                _args[2] = ListCongThem;
                _args[3] = CongThemTiepTheo;
                System.IAsyncResult _result = base.BeginInvoke("Nguoi_Phong_Add", _args, callback, asyncState);
                return _result;
            }
            
            public void EndNguoi_Phong_Add(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("Nguoi_Phong_Add", _args, result);
            }
            
            public System.IAsyncResult BeginNguoi_Phong_GetItemByPhongID(int PhongID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = PhongID;
                System.IAsyncResult _result = base.BeginInvoke("Nguoi_Phong_GetItemByPhongID", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.Generic.List<QuanLyKhachSan.Nguoi_PhongSVC.Nguoi_PhongInfo> EndNguoi_Phong_GetItemByPhongID(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.Generic.List<QuanLyKhachSan.Nguoi_PhongSVC.Nguoi_PhongInfo> _result = ((System.Collections.Generic.List<QuanLyKhachSan.Nguoi_PhongSVC.Nguoi_PhongInfo>)(base.EndInvoke("Nguoi_Phong_GetItemByPhongID", _args, result)));
                return _result;
            }
        }
    }
}
