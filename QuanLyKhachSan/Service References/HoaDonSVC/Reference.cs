//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.235
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 4.0.50826.0
// 
namespace QuanLyKhachSan.HoaDonSVC {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="", ConfigurationName="HoaDonSVC.HoaDonSVC")]
    public interface HoaDonSVC {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:HoaDonSVC/HoaDon_Add", ReplyAction="urn:HoaDonSVC/HoaDon_AddResponse")]
        System.IAsyncResult BeginHoaDon_Add(int UserId, System.AsyncCallback callback, object asyncState);
        
        void EndHoaDon_Add(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface HoaDonSVCChannel : QuanLyKhachSan.HoaDonSVC.HoaDonSVC, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class HoaDonSVCClient : System.ServiceModel.ClientBase<QuanLyKhachSan.HoaDonSVC.HoaDonSVC>, QuanLyKhachSan.HoaDonSVC.HoaDonSVC {
        
        private BeginOperationDelegate onBeginHoaDon_AddDelegate;
        
        private EndOperationDelegate onEndHoaDon_AddDelegate;
        
        private System.Threading.SendOrPostCallback onHoaDon_AddCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public HoaDonSVCClient() {
        }
        
        public HoaDonSVCClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public HoaDonSVCClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public HoaDonSVCClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public HoaDonSVCClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> HoaDon_AddCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult QuanLyKhachSan.HoaDonSVC.HoaDonSVC.BeginHoaDon_Add(int UserId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginHoaDon_Add(UserId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void QuanLyKhachSan.HoaDonSVC.HoaDonSVC.EndHoaDon_Add(System.IAsyncResult result) {
            base.Channel.EndHoaDon_Add(result);
        }
        
        private System.IAsyncResult OnBeginHoaDon_Add(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int UserId = ((int)(inValues[0]));
            return ((QuanLyKhachSan.HoaDonSVC.HoaDonSVC)(this)).BeginHoaDon_Add(UserId, callback, asyncState);
        }
        
        private object[] OnEndHoaDon_Add(System.IAsyncResult result) {
            ((QuanLyKhachSan.HoaDonSVC.HoaDonSVC)(this)).EndHoaDon_Add(result);
            return null;
        }
        
        private void OnHoaDon_AddCompleted(object state) {
            if ((this.HoaDon_AddCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.HoaDon_AddCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void HoaDon_AddAsync(int UserId) {
            this.HoaDon_AddAsync(UserId, null);
        }
        
        public void HoaDon_AddAsync(int UserId, object userState) {
            if ((this.onBeginHoaDon_AddDelegate == null)) {
                this.onBeginHoaDon_AddDelegate = new BeginOperationDelegate(this.OnBeginHoaDon_Add);
            }
            if ((this.onEndHoaDon_AddDelegate == null)) {
                this.onEndHoaDon_AddDelegate = new EndOperationDelegate(this.OnEndHoaDon_Add);
            }
            if ((this.onHoaDon_AddCompletedDelegate == null)) {
                this.onHoaDon_AddCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnHoaDon_AddCompleted);
            }
            base.InvokeAsync(this.onBeginHoaDon_AddDelegate, new object[] {
                        UserId}, this.onEndHoaDon_AddDelegate, this.onHoaDon_AddCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override QuanLyKhachSan.HoaDonSVC.HoaDonSVC CreateChannel() {
            return new HoaDonSVCClientChannel(this);
        }
        
        private class HoaDonSVCClientChannel : ChannelBase<QuanLyKhachSan.HoaDonSVC.HoaDonSVC>, QuanLyKhachSan.HoaDonSVC.HoaDonSVC {
            
            public HoaDonSVCClientChannel(System.ServiceModel.ClientBase<QuanLyKhachSan.HoaDonSVC.HoaDonSVC> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginHoaDon_Add(int UserId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = UserId;
                System.IAsyncResult _result = base.BeginInvoke("HoaDon_Add", _args, callback, asyncState);
                return _result;
            }
            
            public void EndHoaDon_Add(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("HoaDon_Add", _args, result);
            }
        }
    }
}
